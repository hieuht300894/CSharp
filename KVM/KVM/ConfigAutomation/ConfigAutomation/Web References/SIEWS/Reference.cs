//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ConfigAutomation.SIEWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="INTSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntParser))]
    public partial class INT : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CallIntVOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntVByLinkedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntPOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntPByLinkedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntFOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntFByLinkedDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntCOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntConfigROperationCompleted;
        
        private System.Threading.SendOrPostCallback CallIntTestDoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkConfigDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOTapeAndReelOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public INT() {
            this.Url = global::ConfigAutomation.Properties.Settings.Default.ConfigAutomation_SIEWS_INT;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CallIntVCompletedEventHandler CallIntVCompleted;
        
        /// <remarks/>
        public event CallIntVByLinkedDataCompletedEventHandler CallIntVByLinkedDataCompleted;
        
        /// <remarks/>
        public event CallIntPCompletedEventHandler CallIntPCompleted;
        
        /// <remarks/>
        public event CallIntPByLinkedDataCompletedEventHandler CallIntPByLinkedDataCompleted;
        
        /// <remarks/>
        public event CallIntFCompletedEventHandler CallIntFCompleted;
        
        /// <remarks/>
        public event CallIntFByLinkedDataCompletedEventHandler CallIntFByLinkedDataCompleted;
        
        /// <remarks/>
        public event CallIntCCompletedEventHandler CallIntCCompleted;
        
        /// <remarks/>
        public event CallIntConfigCompletedEventHandler CallIntConfigCompleted;
        
        /// <remarks/>
        public event CallIntConfigRCompletedEventHandler CallIntConfigRCompleted;
        
        /// <remarks/>
        public event CallIntTestDoneCompletedEventHandler CallIntTestDoneCompleted;
        
        /// <remarks/>
        public event GetLinkConfigDataCompletedEventHandler GetLinkConfigDataCompleted;
        
        /// <remarks/>
        public event GetPOTapeAndReelCompletedEventHandler GetPOTapeAndReelCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntV", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntV CallIntV(string serialNumber, string imei, string testerName, string processStep, string lineType, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntV", new object[] {
                        serialNumber,
                        imei,
                        testerName,
                        processStep,
                        lineType,
                        applicationName,
                        applicationVersion});
            return ((IntV)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntVAsync(string serialNumber, string imei, string testerName, string processStep, string lineType, string applicationName, string applicationVersion) {
            this.CallIntVAsync(serialNumber, imei, testerName, processStep, lineType, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntVAsync(string serialNumber, string imei, string testerName, string processStep, string lineType, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntVOperationCompleted == null)) {
                this.CallIntVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntVOperationCompleted);
            }
            this.InvokeAsync("CallIntV", new object[] {
                        serialNumber,
                        imei,
                        testerName,
                        processStep,
                        lineType,
                        applicationName,
                        applicationVersion}, this.CallIntVOperationCompleted, userState);
        }
        
        private void OnCallIntVOperationCompleted(object arg) {
            if ((this.CallIntVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntVCompleted(this, new CallIntVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntVByLinkedData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntV CallIntVByLinkedData(string linkData, string linkObject, string imei, string testerName, string processStep, string lineType, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntVByLinkedData", new object[] {
                        linkData,
                        linkObject,
                        imei,
                        testerName,
                        processStep,
                        lineType,
                        applicationName,
                        applicationVersion});
            return ((IntV)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntVByLinkedDataAsync(string linkData, string linkObject, string imei, string testerName, string processStep, string lineType, string applicationName, string applicationVersion) {
            this.CallIntVByLinkedDataAsync(linkData, linkObject, imei, testerName, processStep, lineType, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntVByLinkedDataAsync(string linkData, string linkObject, string imei, string testerName, string processStep, string lineType, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntVByLinkedDataOperationCompleted == null)) {
                this.CallIntVByLinkedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntVByLinkedDataOperationCompleted);
            }
            this.InvokeAsync("CallIntVByLinkedData", new object[] {
                        linkData,
                        linkObject,
                        imei,
                        testerName,
                        processStep,
                        lineType,
                        applicationName,
                        applicationVersion}, this.CallIntVByLinkedDataOperationCompleted, userState);
        }
        
        private void OnCallIntVByLinkedDataOperationCompleted(object arg) {
            if ((this.CallIntVByLinkedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntVByLinkedDataCompleted(this, new CallIntVByLinkedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntP CallIntP(string serialNumber, string testerName, string processStep, string imei, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntP", new object[] {
                        serialNumber,
                        testerName,
                        processStep,
                        imei,
                        applicationName,
                        applicationVersion});
            return ((IntP)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntPAsync(string serialNumber, string testerName, string processStep, string imei, string applicationName, string applicationVersion) {
            this.CallIntPAsync(serialNumber, testerName, processStep, imei, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntPAsync(string serialNumber, string testerName, string processStep, string imei, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntPOperationCompleted == null)) {
                this.CallIntPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntPOperationCompleted);
            }
            this.InvokeAsync("CallIntP", new object[] {
                        serialNumber,
                        testerName,
                        processStep,
                        imei,
                        applicationName,
                        applicationVersion}, this.CallIntPOperationCompleted, userState);
        }
        
        private void OnCallIntPOperationCompleted(object arg) {
            if ((this.CallIntPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntPCompleted(this, new CallIntPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntPByLinkedData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntP CallIntPByLinkedData(string linkData, string linkObject, string testerName, string processStep, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntPByLinkedData", new object[] {
                        linkData,
                        linkObject,
                        testerName,
                        processStep,
                        applicationName,
                        applicationVersion});
            return ((IntP)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntPByLinkedDataAsync(string linkData, string linkObject, string testerName, string processStep, string applicationName, string applicationVersion) {
            this.CallIntPByLinkedDataAsync(linkData, linkObject, testerName, processStep, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntPByLinkedDataAsync(string linkData, string linkObject, string testerName, string processStep, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntPByLinkedDataOperationCompleted == null)) {
                this.CallIntPByLinkedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntPByLinkedDataOperationCompleted);
            }
            this.InvokeAsync("CallIntPByLinkedData", new object[] {
                        linkData,
                        linkObject,
                        testerName,
                        processStep,
                        applicationName,
                        applicationVersion}, this.CallIntPByLinkedDataOperationCompleted, userState);
        }
        
        private void OnCallIntPByLinkedDataOperationCompleted(object arg) {
            if ((this.CallIntPByLinkedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntPByLinkedDataCompleted(this, new CallIntPByLinkedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntF", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntF CallIntF(string serialNumber, string testerName, string processStep, string failLabel, string failMessage, string imei, string serialNumber2, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntF", new object[] {
                        serialNumber,
                        testerName,
                        processStep,
                        failLabel,
                        failMessage,
                        imei,
                        serialNumber2,
                        applicationName,
                        applicationVersion});
            return ((IntF)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntFAsync(string serialNumber, string testerName, string processStep, string failLabel, string failMessage, string imei, string serialNumber2, string applicationName, string applicationVersion) {
            this.CallIntFAsync(serialNumber, testerName, processStep, failLabel, failMessage, imei, serialNumber2, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntFAsync(string serialNumber, string testerName, string processStep, string failLabel, string failMessage, string imei, string serialNumber2, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntFOperationCompleted == null)) {
                this.CallIntFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntFOperationCompleted);
            }
            this.InvokeAsync("CallIntF", new object[] {
                        serialNumber,
                        testerName,
                        processStep,
                        failLabel,
                        failMessage,
                        imei,
                        serialNumber2,
                        applicationName,
                        applicationVersion}, this.CallIntFOperationCompleted, userState);
        }
        
        private void OnCallIntFOperationCompleted(object arg) {
            if ((this.CallIntFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntFCompleted(this, new CallIntFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntFByLinkedData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntF CallIntFByLinkedData(string linkData, string linkObject, string testerName, string processStep, string failLabel, string failMessage, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntFByLinkedData", new object[] {
                        linkData,
                        linkObject,
                        testerName,
                        processStep,
                        failLabel,
                        failMessage,
                        applicationName,
                        applicationVersion});
            return ((IntF)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntFByLinkedDataAsync(string linkData, string linkObject, string testerName, string processStep, string failLabel, string failMessage, string applicationName, string applicationVersion) {
            this.CallIntFByLinkedDataAsync(linkData, linkObject, testerName, processStep, failLabel, failMessage, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntFByLinkedDataAsync(string linkData, string linkObject, string testerName, string processStep, string failLabel, string failMessage, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntFByLinkedDataOperationCompleted == null)) {
                this.CallIntFByLinkedDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntFByLinkedDataOperationCompleted);
            }
            this.InvokeAsync("CallIntFByLinkedData", new object[] {
                        linkData,
                        linkObject,
                        testerName,
                        processStep,
                        failLabel,
                        failMessage,
                        applicationName,
                        applicationVersion}, this.CallIntFByLinkedDataOperationCompleted, userState);
        }
        
        private void OnCallIntFByLinkedDataOperationCompleted(object arg) {
            if ((this.CallIntFByLinkedDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntFByLinkedDataCompleted(this, new CallIntFByLinkedDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntC CallIntC(string serialNumber, string linkStep, string linkRoute, string linkCollection, int customerId) {
            object[] results = this.Invoke("CallIntC", new object[] {
                        serialNumber,
                        linkStep,
                        linkRoute,
                        linkCollection,
                        customerId});
            return ((IntC)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntCAsync(string serialNumber, string linkStep, string linkRoute, string linkCollection, int customerId) {
            this.CallIntCAsync(serialNumber, linkStep, linkRoute, linkCollection, customerId, null);
        }
        
        /// <remarks/>
        public void CallIntCAsync(string serialNumber, string linkStep, string linkRoute, string linkCollection, int customerId, object userState) {
            if ((this.CallIntCOperationCompleted == null)) {
                this.CallIntCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntCOperationCompleted);
            }
            this.InvokeAsync("CallIntC", new object[] {
                        serialNumber,
                        linkStep,
                        linkRoute,
                        linkCollection,
                        customerId}, this.CallIntCOperationCompleted, userState);
        }
        
        private void OnCallIntCOperationCompleted(object arg) {
            if ((this.CallIntCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntCCompleted(this, new CallIntCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntConfig CallIntConfig(string serialNumber, string imei, string testerName, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntConfig", new object[] {
                        serialNumber,
                        imei,
                        testerName,
                        applicationName,
                        applicationVersion});
            return ((IntConfig)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntConfigAsync(string serialNumber, string imei, string testerName, string applicationName, string applicationVersion) {
            this.CallIntConfigAsync(serialNumber, imei, testerName, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntConfigAsync(string serialNumber, string imei, string testerName, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntConfigOperationCompleted == null)) {
                this.CallIntConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntConfigOperationCompleted);
            }
            this.InvokeAsync("CallIntConfig", new object[] {
                        serialNumber,
                        imei,
                        testerName,
                        applicationName,
                        applicationVersion}, this.CallIntConfigOperationCompleted, userState);
        }
        
        private void OnCallIntConfigOperationCompleted(object arg) {
            if ((this.CallIntConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntConfigCompleted(this, new CallIntConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntConfigR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntConfig CallIntConfigR(string serialNumber, string testerName, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntConfigR", new object[] {
                        serialNumber,
                        testerName,
                        applicationName,
                        applicationVersion});
            return ((IntConfig)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntConfigRAsync(string serialNumber, string testerName, string applicationName, string applicationVersion) {
            this.CallIntConfigRAsync(serialNumber, testerName, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntConfigRAsync(string serialNumber, string testerName, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntConfigROperationCompleted == null)) {
                this.CallIntConfigROperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntConfigROperationCompleted);
            }
            this.InvokeAsync("CallIntConfigR", new object[] {
                        serialNumber,
                        testerName,
                        applicationName,
                        applicationVersion}, this.CallIntConfigROperationCompleted, userState);
        }
        
        private void OnCallIntConfigROperationCompleted(object arg) {
            if ((this.CallIntConfigRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntConfigRCompleted(this, new CallIntConfigRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallIntTestDone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CallIntTestDone(string serialNumber, string testerName, string processStep, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> startDateTimeUTC, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> endDateTimeUTC, string testResult, string applicationName, string applicationVersion) {
            object[] results = this.Invoke("CallIntTestDone", new object[] {
                        serialNumber,
                        testerName,
                        processStep,
                        startDateTimeUTC,
                        endDateTimeUTC,
                        testResult,
                        applicationName,
                        applicationVersion});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CallIntTestDoneAsync(string serialNumber, string testerName, string processStep, System.Nullable<System.DateTime> startDateTimeUTC, System.Nullable<System.DateTime> endDateTimeUTC, string testResult, string applicationName, string applicationVersion) {
            this.CallIntTestDoneAsync(serialNumber, testerName, processStep, startDateTimeUTC, endDateTimeUTC, testResult, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void CallIntTestDoneAsync(string serialNumber, string testerName, string processStep, System.Nullable<System.DateTime> startDateTimeUTC, System.Nullable<System.DateTime> endDateTimeUTC, string testResult, string applicationName, string applicationVersion, object userState) {
            if ((this.CallIntTestDoneOperationCompleted == null)) {
                this.CallIntTestDoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallIntTestDoneOperationCompleted);
            }
            this.InvokeAsync("CallIntTestDone", new object[] {
                        serialNumber,
                        testerName,
                        processStep,
                        startDateTimeUTC,
                        endDateTimeUTC,
                        testResult,
                        applicationName,
                        applicationVersion}, this.CallIntTestDoneOperationCompleted, userState);
        }
        
        private void OnCallIntTestDoneOperationCompleted(object arg) {
            if ((this.CallIntTestDoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallIntTestDoneCompleted(this, new CallIntTestDoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLinkConfigData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetLinkConfigData(
                    string serialNumber, 
                    string testername, 
                    string ipaddress, 
                    string applicationName, 
                    string applicationVersion, 
                    out string number, 
                    out string family, 
                    out string sku, 
                    out string imei, 
                    out string ANATEL, 
                    out string CCC, 
                    out bool CE, 
                    out string CE1, 
                    out string CE2, 
                    out string CMIITID, 
                    out string CNC, 
                    out string CPN, 
                    out string CUSTOMERPN, 
                    out string d_1, 
                    out string DELLREV, 
                    out string DELLSKU, 
                    out string EC, 
                    out string FCC, 
                    out string FCCID, 
                    out string FRU, 
                    out string FRU_PN, 
                    out string G_3, 
                    out string Header_Code, 
                    out string IC, 
                    out string ICASA, 
                    out string IDA, 
                    out string IFT, 
                    out string Japan_R, 
                    out string Japan_T, 
                    out string KCC, 
                    out string Lenovo_PN, 
                    out string LocID, 
                    out string m_0, 
                    out string m_1, 
                    out string MFGID, 
                    out string NCC, 
                    out string PRODUCTNAME, 
                    out string R, 
                    out string R1, 
                    out string REV, 
                    out string RR, 
                    out string RUC_USMark, 
                    out string T, 
                    out string T1, 
                    out string Text1, 
                    out string Text2, 
                    out string TRA, 
                    out string TRA1, 
                    out string TRA2, 
                    out string TRC, 
                    out string UKR, 
                    out string VendorID, 
                    out string result) {
            object[] results = this.Invoke("GetLinkConfigData", new object[] {
                        serialNumber,
                        testername,
                        ipaddress,
                        applicationName,
                        applicationVersion});
            number = ((string)(results[1]));
            family = ((string)(results[2]));
            sku = ((string)(results[3]));
            imei = ((string)(results[4]));
            ANATEL = ((string)(results[5]));
            CCC = ((string)(results[6]));
            CE = ((bool)(results[7]));
            CE1 = ((string)(results[8]));
            CE2 = ((string)(results[9]));
            CMIITID = ((string)(results[10]));
            CNC = ((string)(results[11]));
            CPN = ((string)(results[12]));
            CUSTOMERPN = ((string)(results[13]));
            d_1 = ((string)(results[14]));
            DELLREV = ((string)(results[15]));
            DELLSKU = ((string)(results[16]));
            EC = ((string)(results[17]));
            FCC = ((string)(results[18]));
            FCCID = ((string)(results[19]));
            FRU = ((string)(results[20]));
            FRU_PN = ((string)(results[21]));
            G_3 = ((string)(results[22]));
            Header_Code = ((string)(results[23]));
            IC = ((string)(results[24]));
            ICASA = ((string)(results[25]));
            IDA = ((string)(results[26]));
            IFT = ((string)(results[27]));
            Japan_R = ((string)(results[28]));
            Japan_T = ((string)(results[29]));
            KCC = ((string)(results[30]));
            Lenovo_PN = ((string)(results[31]));
            LocID = ((string)(results[32]));
            m_0 = ((string)(results[33]));
            m_1 = ((string)(results[34]));
            MFGID = ((string)(results[35]));
            NCC = ((string)(results[36]));
            PRODUCTNAME = ((string)(results[37]));
            R = ((string)(results[38]));
            R1 = ((string)(results[39]));
            REV = ((string)(results[40]));
            RR = ((string)(results[41]));
            RUC_USMark = ((string)(results[42]));
            T = ((string)(results[43]));
            T1 = ((string)(results[44]));
            Text1 = ((string)(results[45]));
            Text2 = ((string)(results[46]));
            TRA = ((string)(results[47]));
            TRA1 = ((string)(results[48]));
            TRA2 = ((string)(results[49]));
            TRC = ((string)(results[50]));
            UKR = ((string)(results[51]));
            VendorID = ((string)(results[52]));
            result = ((string)(results[53]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkConfigDataAsync(string serialNumber, string testername, string ipaddress, string applicationName, string applicationVersion) {
            this.GetLinkConfigDataAsync(serialNumber, testername, ipaddress, applicationName, applicationVersion, null);
        }
        
        /// <remarks/>
        public void GetLinkConfigDataAsync(string serialNumber, string testername, string ipaddress, string applicationName, string applicationVersion, object userState) {
            if ((this.GetLinkConfigDataOperationCompleted == null)) {
                this.GetLinkConfigDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkConfigDataOperationCompleted);
            }
            this.InvokeAsync("GetLinkConfigData", new object[] {
                        serialNumber,
                        testername,
                        ipaddress,
                        applicationName,
                        applicationVersion}, this.GetLinkConfigDataOperationCompleted, userState);
        }
        
        private void OnGetLinkConfigDataOperationCompleted(object arg) {
            if ((this.GetLinkConfigDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkConfigDataCompleted(this, new GetLinkConfigDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPOTapeAndReel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPOTapeAndReel(string number, string revision, bool isrma) {
            object[] results = this.Invoke("GetPOTapeAndReel", new object[] {
                        number,
                        revision,
                        isrma});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOTapeAndReelAsync(string number, string revision, bool isrma) {
            this.GetPOTapeAndReelAsync(number, revision, isrma, null);
        }
        
        /// <remarks/>
        public void GetPOTapeAndReelAsync(string number, string revision, bool isrma, object userState) {
            if ((this.GetPOTapeAndReelOperationCompleted == null)) {
                this.GetPOTapeAndReelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOTapeAndReelOperationCompleted);
            }
            this.InvokeAsync("GetPOTapeAndReel", new object[] {
                        number,
                        revision,
                        isrma}, this.GetPOTapeAndReelOperationCompleted, userState);
        }
        
        private void OnGetPOTapeAndReelOperationCompleted(object arg) {
            if ((this.GetPOTapeAndReelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOTapeAndReelCompleted(this, new GetPOTapeAndReelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IntV {
        
        private BoardInfo boardField;
        
        private string testerNameField;
        
        private string processStepField;
        
        private string okToTestMessageField;
        
        private bool okToTestField;
        
        private string lineTypeField;
        
        private string dateCodeField;
        
        private string childDateCodeField;
        
        private string iMEIField;
        
        /// <remarks/>
        public BoardInfo Board {
            get {
                return this.boardField;
            }
            set {
                this.boardField = value;
            }
        }
        
        /// <remarks/>
        public string TesterName {
            get {
                return this.testerNameField;
            }
            set {
                this.testerNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessStep {
            get {
                return this.processStepField;
            }
            set {
                this.processStepField = value;
            }
        }
        
        /// <remarks/>
        public string OkToTestMessage {
            get {
                return this.okToTestMessageField;
            }
            set {
                this.okToTestMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool OkToTest {
            get {
                return this.okToTestField;
            }
            set {
                this.okToTestField = value;
            }
        }
        
        /// <remarks/>
        public string LineType {
            get {
                return this.lineTypeField;
            }
            set {
                this.lineTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DateCode {
            get {
                return this.dateCodeField;
            }
            set {
                this.dateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ChildDateCode {
            get {
                return this.childDateCodeField;
            }
            set {
                this.childDateCodeField = value;
            }
        }
        
        /// <remarks/>
        public string IMEI {
            get {
                return this.iMEIField;
            }
            set {
                this.iMEIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BoardInfo {
        
        private int wip_IDField;
        
        private string serialNumberField;
        
        private string customerField;
        
        private string divisionField;
        
        private string assemblyField;
        
        private string numberField;
        
        private string iMEIField;
        
        private string childNumberField;
        
        private string childField;
        
        private System.Nullable<System.DateTime> childDateField;
        
        private System.Nullable<int> assembly_IDField;
        
        private string revisionField;
        
        private System.Nullable<System.DateTime> dateField;
        
        /// <remarks/>
        public int Wip_ID {
            get {
                return this.wip_IDField;
            }
            set {
                this.wip_IDField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        public string Division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
            }
        }
        
        /// <remarks/>
        public string Assembly {
            get {
                return this.assemblyField;
            }
            set {
                this.assemblyField = value;
            }
        }
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string IMEI {
            get {
                return this.iMEIField;
            }
            set {
                this.iMEIField = value;
            }
        }
        
        /// <remarks/>
        public string ChildNumber {
            get {
                return this.childNumberField;
            }
            set {
                this.childNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Child {
            get {
                return this.childField;
            }
            set {
                this.childField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ChildDate {
            get {
                return this.childDateField;
            }
            set {
                this.childDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Assembly_ID {
            get {
                return this.assembly_IDField;
            }
            set {
                this.assembly_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IntConfig {
        
        private string numberField;
        
        private string revisionField;
        
        private string serialNumberField;
        
        private string iMEIField;
        
        private bool isScanIMEIField;
        
        private string okToConfigMessageField;
        
        private bool okToConfigField;
        
        private string configExeField;
        
        private string configFolderField;
        
        private string configFileField;
        
        private string configCommandLineField;
        
        private string configArgsField;
        
        private string iMEISwitchField;
        
        /// <remarks/>
        public string Number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        public string Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string IMEI {
            get {
                return this.iMEIField;
            }
            set {
                this.iMEIField = value;
            }
        }
        
        /// <remarks/>
        public bool IsScanIMEI {
            get {
                return this.isScanIMEIField;
            }
            set {
                this.isScanIMEIField = value;
            }
        }
        
        /// <remarks/>
        public string OkToConfigMessage {
            get {
                return this.okToConfigMessageField;
            }
            set {
                this.okToConfigMessageField = value;
            }
        }
        
        /// <remarks/>
        public bool OkToConfig {
            get {
                return this.okToConfigField;
            }
            set {
                this.okToConfigField = value;
            }
        }
        
        /// <remarks/>
        public string ConfigExe {
            get {
                return this.configExeField;
            }
            set {
                this.configExeField = value;
            }
        }
        
        /// <remarks/>
        public string ConfigFolder {
            get {
                return this.configFolderField;
            }
            set {
                this.configFolderField = value;
            }
        }
        
        /// <remarks/>
        public string ConfigFile {
            get {
                return this.configFileField;
            }
            set {
                this.configFileField = value;
            }
        }
        
        /// <remarks/>
        public string ConfigCommandLine {
            get {
                return this.configCommandLineField;
            }
            set {
                this.configCommandLineField = value;
            }
        }
        
        /// <remarks/>
        public string ConfigArgs {
            get {
                return this.configArgsField;
            }
            set {
                this.configArgsField = value;
            }
        }
        
        /// <remarks/>
        public string IMEISwitch {
            get {
                return this.iMEISwitchField;
            }
            set {
                this.iMEISwitchField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IntCLinkItem {
        
        private string linkDataField;
        
        private string linkObjectField;
        
        /// <remarks/>
        public string LinkData {
            get {
                return this.linkDataField;
            }
            set {
                this.linkDataField = value;
            }
        }
        
        /// <remarks/>
        public string LinkObject {
            get {
                return this.linkObjectField;
            }
            set {
                this.linkObjectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IntC {
        
        private string serialNumberField;
        
        private IntCLinkItem[] linksField;
        
        private string linkStepField;
        
        private string linkRouteField;
        
        private bool linkResultField;
        
        private string linkErrorMessageField;
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public IntCLinkItem[] Links {
            get {
                return this.linksField;
            }
            set {
                this.linksField = value;
            }
        }
        
        /// <remarks/>
        public string LinkStep {
            get {
                return this.linkStepField;
            }
            set {
                this.linkStepField = value;
            }
        }
        
        /// <remarks/>
        public string LinkRoute {
            get {
                return this.linkRouteField;
            }
            set {
                this.linkRouteField = value;
            }
        }
        
        /// <remarks/>
        public bool LinkResult {
            get {
                return this.linkResultField;
            }
            set {
                this.linkResultField = value;
            }
        }
        
        /// <remarks/>
        public string LinkErrorMessage {
            get {
                return this.linkErrorMessageField;
            }
            set {
                this.linkErrorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntF))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntP))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class IntParser {
        
        private string serialNumberField;
        
        private string testerNameField;
        
        private string processStepField;
        
        private string testResultField;
        
        private bool sendResultField;
        
        private string sendErrorMessageField;
        
        /// <remarks/>
        public string SerialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                this.serialNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TesterName {
            get {
                return this.testerNameField;
            }
            set {
                this.testerNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProcessStep {
            get {
                return this.processStepField;
            }
            set {
                this.processStepField = value;
            }
        }
        
        /// <remarks/>
        public string TestResult {
            get {
                return this.testResultField;
            }
            set {
                this.testResultField = value;
            }
        }
        
        /// <remarks/>
        public bool SendResult {
            get {
                return this.sendResultField;
            }
            set {
                this.sendResultField = value;
            }
        }
        
        /// <remarks/>
        public string SendErrorMessage {
            get {
                return this.sendErrorMessageField;
            }
            set {
                this.sendErrorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IntF : IntParser {
        
        private string failMessageField;
        
        private string failLabelField;
        
        /// <remarks/>
        public string FailMessage {
            get {
                return this.failMessageField;
            }
            set {
                this.failMessageField = value;
            }
        }
        
        /// <remarks/>
        public string FailLabel {
            get {
                return this.failLabelField;
            }
            set {
                this.failLabelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class IntP : IntParser {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntVCompletedEventHandler(object sender, CallIntVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntV Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntV)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntVByLinkedDataCompletedEventHandler(object sender, CallIntVByLinkedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntVByLinkedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntVByLinkedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntV Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntV)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntPCompletedEventHandler(object sender, CallIntPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntP Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntP)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntPByLinkedDataCompletedEventHandler(object sender, CallIntPByLinkedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntPByLinkedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntPByLinkedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntP Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntP)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntFCompletedEventHandler(object sender, CallIntFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntF Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntF)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntFByLinkedDataCompletedEventHandler(object sender, CallIntFByLinkedDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntFByLinkedDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntFByLinkedDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntF Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntF)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntCCompletedEventHandler(object sender, CallIntCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntC Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntC)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntConfigCompletedEventHandler(object sender, CallIntConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntConfig Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntConfig)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntConfigRCompletedEventHandler(object sender, CallIntConfigRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntConfigRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntConfigRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntConfig Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntConfig)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CallIntTestDoneCompletedEventHandler(object sender, CallIntTestDoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallIntTestDoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallIntTestDoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetLinkConfigDataCompletedEventHandler(object sender, GetLinkConfigDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkConfigDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkConfigDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string number {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string family {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string sku {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string imei {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string ANATEL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public string CCC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[6]));
            }
        }
        
        /// <remarks/>
        public bool CE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[7]));
            }
        }
        
        /// <remarks/>
        public string CE1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[8]));
            }
        }
        
        /// <remarks/>
        public string CE2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[9]));
            }
        }
        
        /// <remarks/>
        public string CMIITID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[10]));
            }
        }
        
        /// <remarks/>
        public string CNC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[11]));
            }
        }
        
        /// <remarks/>
        public string CPN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[12]));
            }
        }
        
        /// <remarks/>
        public string CUSTOMERPN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[13]));
            }
        }
        
        /// <remarks/>
        public string d_1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[14]));
            }
        }
        
        /// <remarks/>
        public string DELLREV {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[15]));
            }
        }
        
        /// <remarks/>
        public string DELLSKU {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[16]));
            }
        }
        
        /// <remarks/>
        public string EC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[17]));
            }
        }
        
        /// <remarks/>
        public string FCC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[18]));
            }
        }
        
        /// <remarks/>
        public string FCCID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[19]));
            }
        }
        
        /// <remarks/>
        public string FRU {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[20]));
            }
        }
        
        /// <remarks/>
        public string FRU_PN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[21]));
            }
        }
        
        /// <remarks/>
        public string G_3 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[22]));
            }
        }
        
        /// <remarks/>
        public string Header_Code {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[23]));
            }
        }
        
        /// <remarks/>
        public string IC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[24]));
            }
        }
        
        /// <remarks/>
        public string ICASA {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[25]));
            }
        }
        
        /// <remarks/>
        public string IDA {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[26]));
            }
        }
        
        /// <remarks/>
        public string IFT {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[27]));
            }
        }
        
        /// <remarks/>
        public string Japan_R {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[28]));
            }
        }
        
        /// <remarks/>
        public string Japan_T {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[29]));
            }
        }
        
        /// <remarks/>
        public string KCC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[30]));
            }
        }
        
        /// <remarks/>
        public string Lenovo_PN {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[31]));
            }
        }
        
        /// <remarks/>
        public string LocID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[32]));
            }
        }
        
        /// <remarks/>
        public string m_0 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[33]));
            }
        }
        
        /// <remarks/>
        public string m_1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[34]));
            }
        }
        
        /// <remarks/>
        public string MFGID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[35]));
            }
        }
        
        /// <remarks/>
        public string NCC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[36]));
            }
        }
        
        /// <remarks/>
        public string PRODUCTNAME {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[37]));
            }
        }
        
        /// <remarks/>
        public string R {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[38]));
            }
        }
        
        /// <remarks/>
        public string R1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[39]));
            }
        }
        
        /// <remarks/>
        public string REV {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[40]));
            }
        }
        
        /// <remarks/>
        public string RR {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[41]));
            }
        }
        
        /// <remarks/>
        public string RUC_USMark {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[42]));
            }
        }
        
        /// <remarks/>
        public string T {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[43]));
            }
        }
        
        /// <remarks/>
        public string T1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[44]));
            }
        }
        
        /// <remarks/>
        public string Text1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[45]));
            }
        }
        
        /// <remarks/>
        public string Text2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[46]));
            }
        }
        
        /// <remarks/>
        public string TRA {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[47]));
            }
        }
        
        /// <remarks/>
        public string TRA1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[48]));
            }
        }
        
        /// <remarks/>
        public string TRA2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[49]));
            }
        }
        
        /// <remarks/>
        public string TRC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[50]));
            }
        }
        
        /// <remarks/>
        public string UKR {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[51]));
            }
        }
        
        /// <remarks/>
        public string VendorID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[52]));
            }
        }
        
        /// <remarks/>
        public string result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[53]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPOTapeAndReelCompletedEventHandler(object sender, GetPOTapeAndReelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOTapeAndReelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOTapeAndReelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591